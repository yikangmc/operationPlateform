<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yikang.protal.dao.QuestionDao" >
  <resultMap id="BaseResultMap" type="com.yikang.protal.entity.Question" >
    <id column="question_id" property="questionId" jdbcType="BIGINT" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="create_user_id" property="createUserId" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="is_delete" property="isDelete" jdbcType="TINYINT" />
    <result column="star" property="star" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    question_id, title, content, create_user_id, create_time, is_delete, star, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from questions
    where question_id = #{questionId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from questions
    where question_id = #{questionId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.yikang.protal.entity.Question" >
    <selectKey resultType="Long" keyProperty="questionId" order="AFTER">
		SELECT LAST_INSERT_ID()
	</selectKey>
    insert into questions (question_id, title, content, 
      create_user_id, create_time, is_delete, 
      star, update_time)
    values (#{questionId,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, 
      #{createUserId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{isDelete,jdbcType=TINYINT}, 
      #{star,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.yikang.protal.entity.Question" >
    <selectKey resultType="Long" keyProperty="questionId" order="AFTER">
		SELECT LAST_INSERT_ID()
	</selectKey>
    insert into questions
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="questionId != null" >
        question_id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="createUserId != null" >
        create_user_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="isDelete != null" >
        is_delete,
      </if>
      <if test="star != null" >
        star,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="questionId != null" >
        #{questionId,jdbcType=BIGINT},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null" >
        #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=TINYINT},
      </if>
      <if test="star != null" >
        #{star,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yikang.protal.entity.Question" >
    update questions
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null" >
        create_user_id = #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=TINYINT},
      </if>
      <if test="star != null" >
        star = #{star,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where question_id = #{questionId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yikang.protal.entity.Question" >
    update questions
    set title = #{title,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      create_user_id = #{createUserId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      is_delete = #{isDelete,jdbcType=TINYINT},
      star = #{star,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where question_id = #{questionId,jdbcType=BIGINT}
  </update>
  
  
  
  <resultMap type="com.yikang.protal.entity.Question" id="getQuestionDetailByQuestionIdResultMap" extends="BaseResultMap">
	<result column="user_name" property="userName"/>
	<result column="photo_url" property="photoUrl"/>
  </resultMap>
  
  <!--查询某一个问题详情  -->
  <select id="getQuestionDetailByQuestionId" parameterType="long" resultMap="getQuestionDetailByQuestionIdResultMap">
  	select 
  		questions.question_id, 
  		questions.title, 
  		questions.content, questions.create_user_id, questions.create_time, questions.is_delete, questions.star, questions.update_time,
  		ui.user_name,
  		ui.photo_url
  	from questions left join  user_infos ui on questions.create_user_id=ui.user_id
  	where question_id=#{questionId}
  </select>
  
  <!-- 根据标签查询某一个问题 -->
  <resultMap type="com.yikang.protal.entity.Question" extends="BaseResultMap" id="getQuestionByTaglibidResultMap">
  	<result column="user_name" property="userName"/>
	<result column="photo_url" property="photoUrl"/>
	<result column="answer_num" property="answerNum"/>
  </resultMap>
  <select id="getQuestionByTaglibid" resultMap="getQuestionByTaglibidResultMap" parameterType="long">
  	select 
  		que.question_id, 
  		que.title, 
  		que.content, 
  		que.create_user_id, 
  		que.create_time, 
  		que.is_delete, 
  		que.star,
  		ui.user_name,
  		ui.photo_url,
  		(select count(1) from question_answers where question_id=que.question_id  ) as answer_num
  	from 
  		question_taglib_maps qtm  
	inner join questions que on qtm.questions_id=que.question_id
	left join  user_infos ui on que.create_user_id=ui.user_id
	where taglibs_id=#{taglibsId}
	order by que.create_time desc
  </select>
  
  <!-- 获取某一个用户创建的所有问题 -->
   <resultMap type="com.yikang.protal.entity.Question" extends="BaseResultMap" id="getQuestionByCreateUserIdResultMap">
  	<result column="user_name" property="userName"/>
	<result column="photo_url" property="photoUrl"/>
	<result column="answer_num" property="answerNum"/>
  </resultMap>
  <select id="getQuestionByCreateUserId" parameterType="long" resultMap="getQuestionByCreateUserIdResultMap">
  	select 
  		que.question_id, 
  		que.title, 
  		que.content, 
  		que.create_user_id, 
  		que.create_time, 
  		que.is_delete, 
  		que.star,
  		ui.user_name,
  		ui.photo_url,
  		(select count(1) from question_answers where question_id=question_id ) as answer_num
  	from 
  		question_taglib_maps qtm  
	inner join questions que on qtm.questions_id=que.question_id
	left join  user_infos ui on que.create_user_id=ui.user_id
	where create_user_id=#{userId}
	order by que.create_time desc
  </select>
  
  
  <resultMap type="com.yikang.protal.entity.Question" extends="BaseResultMap" id="queryAllQuestionsPageResultMap">
  	  	<result column="user_name" property="userName"/>
  	  	<result column="answer_num" property="answerNum"/>
  	  	<result column="taglibs_id" property="taglibsId"/>
  	  	<result column="content" property="content"/>
  </resultMap>
  <select id="queryAllQuestionsPage" parameterType="map" resultMap="queryAllQuestionsPageResultMap">
	select
	que.question_id,
	que.title,
	que.content,
	que.create_user_id,
	que.create_time,
	que.is_delete,
	que.star,
	ui.user_name,
	ui.photo_url,
	qtm.taglibs_id as taglibsId,
	count(qa.question_answer_id) as answer_num
	from
	question_taglib_maps qtm
	inner join questions que on qtm.questions_id=que.question_id
	left join
	user_infos ui on que.create_user_id=ui.user_id
	left join users on users.user_id=que.create_user_id
	LEFT JOIN
	question_answers qa on qtm.questions_id=qa.question_id
	where 1=1 
	<if test="null!=title and title  != ''">
		and que.title like concat('%',#{title},'%')
	</if>
	<if test="null!=content and content != ''">
		and que.title like concat('%',#{content},'%')
	</if>
	<if test="null != userName and userName !=''">
			and users.login_name=#{userName}
		</if>
		<if test="null != firstTime and firstTime !='' and null != lastTime and lastTime !=''">
		and (que.create_time between
		#{firstTime} and #{lastTime})
		</if>
	group by que.question_id 
	order by answer_num asc,que.create_time DESC
  </select>
  
  <select id="queryQuestionTitleById" parameterType="string" resultType="string">
		select title from questions where question_id = #{questionId}
	</select>  
	
 <insert id="saveAnswerOfQuestion" parameterType="com.yikang.protal.entity.Answer">
 	insert into question_answers(create_user_id,data_source,content,question_id,star_num,is_recommend,create_time,update_time)
 	values(#{createUserId},#{answersDataSource},#{answerText},#{questionId},#{starNum},#{isRecommend},#{createTime},#{updateTime})
 </insert> 
 
 <select id="queryUserIdByUserName" parameterType="string" resultType="long">
 	select user_id from user_infos where user_name = #{userName}
 </select>
 
</mapper>