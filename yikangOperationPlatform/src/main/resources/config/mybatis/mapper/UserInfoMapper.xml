<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yikang.protal.dao.UserInfoDao" >
  <resultMap id="BaseResultMap" type="com.yikang.protal.entity.UserInfo" >
    <id column="user_info_id" property="userInfoId" jdbcType="BIGINT" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="user_sex" property="userSex" jdbcType="TINYINT" />
    <result column="provence_code" property="provenceCode" jdbcType="VARCHAR" />
    <result column="city_code" property="cityCode" jdbcType="VARCHAR" />
    <result column="district_code" property="districtCode" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="create_at" property="createAt" jdbcType="BIGINT" />
    <result column="update_at" property="updateAt" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="is_delete" property="isDelete" jdbcType="BIGINT" />
    <result column="user_infos_col" property="userInfosCol" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="BIGINT" />
	
  </resultMap>
  <sql id="Base_Column_List" >
    user_info_id, user_name, user_sex, provence_code, city_code, district_code, address, 
    create_at, update_at, user_id, is_delete, user_infos_col
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from user_infos
    where user_info_id = #{userInfoId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from user_infos
    where user_info_id = #{userInfoId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.yikang.protal.entity.UserInfo" >
    insert into user_infos (user_info_id, user_name, user_sex, 
      provence_code, city_code, district_code, 
      address, create_at, update_at, 
      user_id, is_delete, user_infos_col
      )
    values (#{userInfoId,jdbcType=BIGINT}, #{userName,jdbcType=VARCHAR}, #{userSex,jdbcType=TINYINT}, 
      #{provenceCode,jdbcType=VARCHAR}, #{cityCode,jdbcType=VARCHAR}, #{districtCode,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{createAt,jdbcType=BIGINT}, #{updateAt,jdbcType=BIGINT}, 
      #{userId,jdbcType=BIGINT}, #{isDelete,jdbcType=BIGINT}, #{userInfosCol,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yikang.protal.entity.UserInfo" >
    insert into user_infos
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userInfoId != null" >
        user_info_id,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="userSex != null" >
        user_sex,
      </if>
      <if test="provenceCode != null" >
        provence_code,
      </if>
      <if test="cityCode != null" >
        city_code,
      </if>
      <if test="districtCode != null" >
        district_code,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="createAt != null" >
        create_at,
      </if>
      <if test="updateAt != null" >
        update_at,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="isDelete != null" >
        is_delete,
      </if>
      <if test="userInfosCol != null" >
        user_infos_col,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userInfoId != null" >
        #{userInfoId,jdbcType=BIGINT},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userSex != null" >
        #{userSex,jdbcType=TINYINT},
      </if>
      <if test="provenceCode != null" >
        #{provenceCode,jdbcType=VARCHAR},
      </if>
      <if test="cityCode != null" >
        #{cityCode,jdbcType=VARCHAR},
      </if>
      <if test="districtCode != null" >
        #{districtCode,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="createAt != null" >
        #{createAt,jdbcType=BIGINT},
      </if>
      <if test="updateAt != null" >
        #{updateAt,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=BIGINT},
      </if>
      <if test="userInfosCol != null" >
        #{userInfosCol,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yikang.protal.entity.UserInfo" >
    update user_infos
    <set >
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userSex != null" >
        user_sex = #{userSex,jdbcType=TINYINT},
      </if>
      <if test="provenceCode != null" >
        provence_code = #{provenceCode,jdbcType=VARCHAR},
      </if>
      <if test="cityCode != null" >
        city_code = #{cityCode,jdbcType=VARCHAR},
      </if>
      <if test="districtCode != null" >
        district_code = #{districtCode,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="createAt != null" >
        create_at = #{createAt,jdbcType=BIGINT},
      </if>
      <if test="updateAt != null" >
        update_at = #{updateAt,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=BIGINT},
      </if>
      <if test="userInfosCol != null" >
        user_infos_col = #{userInfosCol,jdbcType=VARCHAR},
      </if>
    </set>
    where user_info_id = #{userInfoId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yikang.protal.entity.UserInfo" >
    update user_infos
    set user_name = #{userName,jdbcType=VARCHAR},
      user_sex = #{userSex,jdbcType=TINYINT},
      provence_code = #{provenceCode,jdbcType=VARCHAR},
      city_code = #{cityCode,jdbcType=VARCHAR},
      district_code = #{districtCode,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      create_at = #{createAt,jdbcType=BIGINT},
      update_at = #{updateAt,jdbcType=BIGINT},
      user_id = #{userId,jdbcType=BIGINT},
      is_delete = #{isDelete,jdbcType=BIGINT},
      user_infos_col = #{userInfosCol,jdbcType=VARCHAR}
    where user_info_id = #{userInfoId,jdbcType=BIGINT}
  </update>
  
  <resultMap type="com.yikang.protal.entity.UserInfo" id="getUserInfoListResultMap" extends="BaseResultMap">
  	<result column="user_id"  		property="userId"/>
  	<result column="login_name" 	property="loginName"/>
  	<result column="login_password" property="loginPassword"/>
  </resultMap>
	<!-- 获取用户信息列表。 -->
  <select id="getUserInfoListPage" resultMap="getUserInfoListResultMap" parameterType="com.yikang.protal.entity.UserInfo">
   select 
		users.user_id,users.login_name,users.login_password,
	    ui.user_name,ui.user_sex,ui.provence_code,ui.city_code,ui.district_code,ui.create_at,
		ui.address
	from users inner join user_infos ui on users.user_id = ui.user_id
  </select>

  <resultMap type="com.yikang.protal.entity.CountTaglib" id="getCardCountByDateResultMap">
  	  	<result column="taglibId" property="taglibId"/>
  		<result column="taglibName" property="taglibName"/>
  		<result column="cardNumber" property="number"/>
  </resultMap>
    
	  <!-- 获取每日用户数量 -->
	  <select id="getUserCountByDate" parameterType="map" resultType="int">
		 select  count(1)  from users
		 left join user_froms on users.user_id=user_froms.user_id
		 where (users.create_time between #{startDate} and #{endDate})
			 <if test="userFrom!=null">
			 	and user_froms.user_from = #{userFrom}
			 </if>
	  </select>
  
	<!--   获得当日每个标签下的发帖量 -->
	<select id="getCardCountByDate" parameterType="map" resultMap="getCardCountByDateResultMap">
		select t.taglib_id as taglibId,t.tag_name as taglibName,count(fp.forum_post_id) as cardNumber
		from taglibs t
		left join forum_posts_taglibs_maps fptm on t.taglib_id=fptm.tag_libs_id
		left join forum_posts fp on fptm.form_post_id=fp.forum_post_id
		and fp.create_time between #{startDate}  and  #{endDate}
		and fp.forum_post_group = 0
		where t.parent_id != 0
		group by t.taglib_id	
	</select>
	<!--   获得当日每个标签下的专家说量 -->
	<select id="getExpertCountByDate" parameterType="map" resultMap="getCardCountByDateResultMap">
		select t.taglib_id as taglibId,t.tag_name as taglibName,count(fp.forum_post_id) as cardNumber
		from taglibs t
		left join forum_posts_taglibs_maps fptm on t.taglib_id=fptm.tag_libs_id
		left join forum_posts fp on fptm.form_post_id=fp.forum_post_id
		and fp.create_time between #{startDate} and  #{endDate}
		and fp.forum_post_group = 1
		where t.parent_id != 0
		group by t.taglib_id
	</select>
	<!--   获得当日每个标签下的问题的回答量 -->
	<select id="getAnswerCountByDate" parameterType="map" resultMap="getCardCountByDateResultMap">
		select t.taglib_id as taglibId,t.tag_name as taglibName,count(qa.question_answer_id) as cardNumber
		from taglibs t
		left join question_taglib_maps qtm on t.taglib_id = qtm.taglibs_id
		left join questions q on qtm.questions_id = q.question_id
		left join question_answers qa on q.question_id=qa.question_id
		and qa.create_time between #{startDate} and  #{endDate}
		where t.parent_id != 0
		group by t.taglib_id
	</select>
	
	<!--   获得当日每个标签下的问题量 -->
	<select id="getQuestionCountByDate" parameterType="map" resultMap="getCardCountByDateResultMap">
		select t.taglib_id as taglibId,t.tag_name as taglibName,count(q.question_id) as cardNumber
		from taglibs t
		left join question_taglib_maps qtm on t.taglib_id = qtm.taglibs_id
		left join questions q on qtm.questions_id = q.question_id
		and q.create_time between #{startDate} and  #{endDate}
		where t.parent_id != 0
		group by t.taglib_id
	</select>

</mapper>